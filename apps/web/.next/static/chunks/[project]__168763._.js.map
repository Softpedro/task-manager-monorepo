{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskForm/TaskForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"../../types/Task\";\n\ninterface TaskFormProps {\n  task?: Task; // Tarea opcional para soporte de creación o edición\n  onSave: (updatedTask: Partial<Task>) => void;\n}\n\nexport const TaskForm: React.FC<TaskFormProps> = ({ task, onSave }) => {\n  const [title, setTitle] = useState(task?.title || \"\");\n  const [description, setDescription] = useState(task?.description || \"\");\n  const [status, setStatus] = useState(task?.status || \"todo\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSave({ id: task?.id, title, description, status });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"description\">Description:</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"status\">Status:</label>\n        <select\n          id=\"status\"\n          value={status}\n          onChange={(e) => setStatus(e.target.value as Task[\"status\"])}\n        >\n          <option value=\"todo\">To Do</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </div>\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;;AAQO,MAAM,WAAoC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;IAChE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,SAAS;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,eAAe;IACpE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,UAAU;IAErD,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,OAAO;YAAE,IAAI,MAAM;YAAI;YAAO;YAAa;QAAO;IACpD;IAEA,qBACE,4TAAC;QAAK,UAAU;;0BACd,4TAAC;;kCACC,4TAAC;wBAAM,SAAQ;kCAAQ;;;;;;kCACvB,4TAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAG5C,4TAAC;;kCACC,4TAAC;wBAAM,SAAQ;kCAAc;;;;;;kCAC7B,4TAAC;wBACC,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0BAGlD,4TAAC;;kCACC,4TAAC;wBAAM,SAAQ;kCAAS;;;;;;kCACxB,4TAAC;wBACC,IAAG;wBACH,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;;0CAEzC,4TAAC;gCAAO,OAAM;0CAAO;;;;;;0CACrB,4TAAC;gCAAO,OAAM;0CAAc;;;;;;0CAC5B,4TAAC;gCAAO,OAAM;0CAAY;;;;;;;;;;;;;;;;;;0BAG9B,4TAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;GA5Ca;KAAA"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskItem/TaskItem.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"../../state/taskStore\";\nimport { Modal } from \"../../components/Modal/Modal\";\nimport { TaskForm } from \"../../components/TaskForm/TaskForm\";\n\ninterface TaskItemProps {\n  task: Task;\n  onEdit: (updatedTask: Partial<Task>) => void;\n  onDelete: (id: number) => void;\n}\n\nexport const TaskItem: React.FC<TaskItemProps> = ({\n  task,\n  onEdit,\n  onDelete\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  if (!task) {\n    return <div>Error: Task is undefined</div>; // Fallback en caso de que `task` no exista\n  }\n\n  const handleEdit = (updatedTask: Partial<Task>) => {\n    onEdit(updatedTask);\n    setIsEditing(false);\n  };\n\n  return (\n    <>\n      <div className=\"task-item\">\n        <span>{task.title}</span>\n        <span>{task.status}</span>\n        <button onClick={() => setIsEditing(true)}>Edit</button>\n        <button onClick={() => onDelete(task.id)}>Delete</button>\n      </div>\n\n      <Modal\n        isOpen={isEditing}\n        title=\"Edit Task\"\n        onClose={() => setIsEditing(false)}\n      >\n        <TaskForm task={task} onSave={handleEdit} />\n      </Modal>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAWO,MAAM,WAAoC,CAAC,EAChD,IAAI,EACJ,MAAM,EACN,QAAQ,EACT;;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,IAAI,CAAC,MAAM;QACT,qBAAO,4TAAC;sBAAI;;;;;kBAAgC,2CAA2C;IACzF;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO;QACP,aAAa;IACf;IAEA,qBACE;;0BACE,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;kCAAM,KAAK,KAAK;;;;;;kCACjB,4TAAC;kCAAM,KAAK,MAAM;;;;;;kCAClB,4TAAC;wBAAO,SAAS,IAAM,aAAa;kCAAO;;;;;;kCAC3C,4TAAC;wBAAO,SAAS,IAAM,SAAS,KAAK,EAAE;kCAAG;;;;;;;;;;;;0BAG5C,4TAAC;gBACC,QAAQ;gBACR,OAAM;gBACN,SAAS,IAAM,aAAa;0BAE5B,cAAA,4TAAC;oBAAS,MAAM;oBAAM,QAAQ;;;;;;;;;;;;;AAItC;GAlCa;KAAA"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskList/TaskList.tsx"],"sourcesContent":["import React from \"react\";\nimport { TaskItem } from \"../TaskItem/TaskItem\";\nimport { Task } from \"../../types/Task\";\n\ninterface TaskListProps {\n  tasks: Task[];\n  onEdit: (updatedTask: Partial<Task>) => void;\n  onDelete: (id: number) => void;\n}\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  tasks,\n  onEdit,\n  onDelete\n}) => {\n  return (\n    <div className=\"task-list\">\n      {tasks.map((task) => (\n        <TaskItem\n          key={task.id}\n          task={task}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      ))}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AASO,MAAM,WAAoC,CAAC,EAChD,KAAK,EACL,MAAM,EACN,QAAQ,EACT;IACC,qBACE,4TAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,4TAAC,4JAAA,CAAA,WAAQ;gBAEP,MAAM;gBACN,QAAQ;gBACR,UAAU;eAHL,KAAK,EAAE;;;;;;;;;;AAQtB;KAjBa"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/services/taskService.ts"],"sourcesContent":["import { Task } from \"../state/taskStore\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nexport const taskService = {\n  getTasks: async (): Promise<Task[]> => {\n    const response = await fetch(`${API_URL}/tasks`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error fetching tasks: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  createTask: async (task: Omit<Task, \"id\">): Promise<Task> => {\n    const response = await fetch(`${API_URL}/tasks`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(task)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error creating task: ${response.statusText}`);\n    }\n\n    return response.json();\n  },\n\n  updateTask: async (id: number, updates: Partial<Task>): Promise<Task> => {\n    const response = await fetch(`${API_URL}/tasks/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updates)\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Error updating task with ID ${id}: ${response.statusText}`\n      );\n    }\n\n    return response.json();\n  },\n\n  deleteTask: async (id: number): Promise<void> => {\n    try {\n      const response = await fetch(`${API_URL}/tasks/${id}`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n\n      if (!response.ok) {\n        throw new Error(\n          `Error deleting task with ID ${id}: ${response.statusText}`\n        );\n      }\n\n      console.log(`Task with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Failed to delete task with ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n"],"names":[],"mappings":";;;AAEgB;AAAhB,MAAM;AAEC,MAAM,cAAc;IACzB,UAAU;QACR,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,SAAS,UAAU,EAAE;QAChE;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO;QACjB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,SAAS,UAAU,EAAE;QAC/D;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO,IAAY;QAC7B,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;YACrD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MACR,CAAC,4BAA4B,EAAE,GAAG,EAAE,EAAE,SAAS,UAAU,EAAE;QAE/D;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;gBACrD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;YAChD;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MACR,CAAC,4BAA4B,EAAE,GAAG,EAAE,EAAE,SAAS,UAAU,EAAE;YAE/D;YAEA,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,GAAG,sBAAsB,CAAC;QACxD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC,EAAE;YACtD,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/state/taskStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: \"todo\" | \"in-progress\" | \"completed\";\n}\n\ninterface TaskState {\n  tasks: Task[];\n  fetchTasks: () => Promise<void>;\n  addTask: (task: Task) => void;\n  updateTask: (id: number, updates: Partial<Task>) => void;\n  deleteTask: (id: number) => void;\n}\n\n// Asegúrate de que la variable está definida\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\nif (!API_URL) {\n  throw new Error(\"API_URL is not defined in the environment variables\");\n}\n\nexport const useTaskStore = create<TaskState>((set) => ({\n  tasks: [],\n  fetchTasks: async () => {\n    const response = await fetch(`${API_URL}/tasks`);\n    const data: Task[] = await response.json();\n    set({ tasks: data });\n  },\n  addTask: (task) => set((state) => ({ tasks: [...state.tasks, task] })),\n  updateTask: (id, updates) =>\n    set((state) => ({\n      tasks: state.tasks.map((task) =>\n        task.id === id ? { ...task, ...updates } : task\n      )\n    })),\n  deleteTask: (id) =>\n    set((state) => ({ tasks: state.tasks.filter((task) => task.id !== id) }))\n}));\n"],"names":[],"mappings":";;;AAkBgB;AAlBhB;;AAiBA,6CAA6C;AAC7C,MAAM;AACN,uCAAc;;AAEd;AAEO,MAAM,eAAe,CAAA,GAAA,wPAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACtD,OAAO,EAAE;QACT,YAAY;YACV,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC;YAC/C,MAAM,OAAe,MAAM,SAAS,IAAI;YACxC,IAAI;gBAAE,OAAO;YAAK;QACpB;QACA,SAAS,CAAC,OAAS,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAK;gBAAC,CAAC;QACpE,YAAY,CAAC,IAAI,UACf,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,OACtB,KAAK,EAAE,KAAK,KAAK;4BAAE,GAAG,IAAI;4BAAE,GAAG,OAAO;wBAAC,IAAI;gBAE/C,CAAC;QACH,YAAY,CAAC,KACX,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;gBAAI,CAAC;IAC3E,CAAC"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { TaskList } from \"ui\";\nimport { TaskForm } from \"ui\";\nimport { taskService } from \"../services/taskService\";\nimport { Task, useTaskStore } from \"../state/taskStore\";\n\nexport default function TasksPage() {\n  const { tasks, fetchTasks, addTask, updateTask, deleteTask } = useTaskStore();\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const handleAddTask = async (values: Omit<Task, \"id\">) => {\n    const newTask = await taskService.createTask(values);\n    addTask(newTask);\n  };\n\n  const handleUpdateTask = async (id: number, updates: Partial<Task>) => {\n    await taskService.updateTask(id, updates);\n    updateTask(id, updates);\n  };\n\n  const handleDeleteTask = async (id: number) => {\n    await taskService.deleteTask(id);\n    deleteTask(id);\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Task Manager</h1>\n      <TaskForm onSubmit={handleAddTask} />\n      <TaskList\n        tasks={tasks}\n        onEdit={(id) => {\n          const task = tasks.find((task) => task.id === id);\n          if (task) {\n            handleUpdateTask(id, { ...task, status: \"completed\" }); // Ejemplo: cambiar estado\n          }\n        }}\n        onDelete={handleDeleteTask}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AAFA;AADA;;;AAHA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,eAAY,AAAD;IAE1E,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;+BAAE;YACR;QACF;8BAAG;QAAC;KAAW;IAEf,MAAM,gBAAgB,OAAO;QAC3B,MAAM,UAAU,MAAM,gJAAA,CAAA,cAAW,CAAC,UAAU,CAAC;QAC7C,QAAQ;IACV;IAEA,MAAM,mBAAmB,OAAO,IAAY;QAC1C,MAAM,gJAAA,CAAA,cAAW,CAAC,UAAU,CAAC,IAAI;QACjC,WAAW,IAAI;IACjB;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,gJAAA,CAAA,cAAW,CAAC,UAAU,CAAC;QAC7B,WAAW;IACb;IAEA,qBACE,4TAAC;QAAI,OAAO;YAAE,SAAS;QAAO;;0BAC5B,4TAAC;0BAAG;;;;;;0BACJ,4TAAC,4JAAA,CAAA,WAAQ;gBAAC,UAAU;;;;;;0BACpB,4TAAC,4JAAA,CAAA,WAAQ;gBACP,OAAO;gBACP,QAAQ,CAAC;oBACP,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;oBAC9C,IAAI,MAAM;wBACR,iBAAiB,IAAI;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAY,IAAI,0BAA0B;oBACpF;gBACF;gBACA,UAAU;;;;;;;;;;;;AAIlB;GAtCwB;;QACyC,2IAAA,CAAA,eAAY;;;KADrD"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/node_modules/.pnpm/zustand%405.0.2_%40types%2Breact%4019.0.1_react%4019.0.0/node_modules/zustand/esm/vanilla.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI;IACJ,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,MAAM,WAAW,CAAC,SAAS;QACzB,MAAM,YAAY,OAAO,YAAY,aAAa,QAAQ,SAAS;QACnE,IAAI,CAAC,OAAO,EAAE,CAAC,WAAW,QAAQ;YAChC,MAAM,gBAAgB;YACtB,QAAQ,CAAC,WAAW,OAAO,UAAU,OAAO,cAAc,YAAY,cAAc,IAAI,IAAI,YAAY,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;YACjI,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS,OAAO;QAClD;IACF;IACA,MAAM,WAAW,IAAM;IACvB,MAAM,kBAAkB,IAAM;IAC9B,MAAM,YAAY,CAAC;QACjB,UAAU,GAAG,CAAC;QACd,OAAO,IAAM,UAAU,MAAM,CAAC;IAChC;IACA,MAAM,MAAM;QAAE;QAAU;QAAU;QAAiB;IAAU;IAC7D,MAAM,eAAe,QAAQ,YAAY,UAAU,UAAU;IAC7D,OAAO;AACT;AACA,MAAM,cAAc,CAAC,cAAgB,cAAc,gBAAgB,eAAe","ignoreList":[0]}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/node_modules/.pnpm/zustand%405.0.2_%40types%2Breact%4019.0.1_react%4019.0.0/node_modules/zustand/esm/react.mjs"],"sourcesContent":["import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAC,MAAQ;AAC1B,SAAS,SAAS,GAAG,EAAE,WAAW,QAAQ;IACxC,MAAM,QAAQ,4RAAA,CAAA,UAAK,CAAC,oBAAoB,CACtC,IAAI,SAAS;gDACb,IAAM,SAAS,IAAI,QAAQ;;gDAC3B,IAAM,SAAS,IAAI,eAAe;;IAEpC,4RAAA,CAAA,UAAK,CAAC,aAAa,CAAC;IACpB,OAAO;AACT;AACA,MAAM,aAAa,CAAC;IAClB,MAAM,MAAM,CAAA,GAAA,0PAAA,CAAA,cAAW,AAAD,EAAE;IACxB,MAAM,gBAAgB,CAAC,WAAa,SAAS,KAAK;IAClD,OAAO,MAAM,CAAC,eAAe;IAC7B,OAAO;AACT;AACA,MAAM,SAAS,CAAC,cAAgB,cAAc,WAAW,eAAe","ignoreList":[0]}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}