{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/backend/src/mocks/handlers.ts"],"sourcesContent":["import { http, HttpResponse } from \"msw\";\n\nlet tasks = [\n  { id: \"1\", title: \"Tarea 1\", description: \"Descripción 1\", status: \"todo\" },\n  { id: \"2\", title: \"Tarea 2\", description: \"Descripción 2\", status: \"done\" }\n];\n\nexport const handlers = [\n  http.get(\"/api/tasks\", () => {\n    return HttpResponse.json(tasks, { status: 200 });\n  }),\n  http.post(\"/api/tasks\", async ({ request }) => {\n    const newTask = (await request.json()) as {\n      title: string;\n      description: string;\n      status: string;\n    };\n    const taskWithId = { id: Date.now().toString(), ...newTask };\n    tasks.push(taskWithId);\n    return HttpResponse.json(taskWithId, { status: 201 });\n  }),\n  http.put(\"/api/tasks/:id\", async ({ request, params }) => {\n    const updatedTask = (await request.json()) as {\n      title: string;\n      description: string;\n      status: string;\n    };\n    tasks = tasks.map((task) =>\n      task.id === params.id ? { ...task, ...updatedTask } : task\n    );\n    return HttpResponse.json(updatedTask, { status: 200 });\n  }),\n  http.delete(\"/api/tasks/:id\", ({ params }) => {\n    tasks = tasks.filter((task) => task.id !== params.id);\n    return new HttpResponse(null, { status: 204 });\n  })\n];\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,IAAI,QAAQ;IACV;QAAE,IAAI;QAAK,OAAO;QAAW,aAAa;QAAiB,QAAQ;IAAO;IAC1E;QAAE,IAAI;QAAK,OAAO;QAAW,aAAa;QAAiB,QAAQ;IAAO;CAC3E;AAEM,MAAM,WAAW;IACtB,4PAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAc;QACrB,OAAO,oQAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;YAAE,QAAQ;QAAI;IAChD;IACA,4PAAA,CAAA,OAAI,CAAC,IAAI,CAAC,cAAc,OAAO,EAAE,OAAO,EAAE;QACxC,MAAM,UAAW,MAAM,QAAQ,IAAI;QAKnC,MAAM,aAAa;YAAE,IAAI,KAAK,GAAG,GAAG,QAAQ;YAAI,GAAG,OAAO;QAAC;QAC3D,MAAM,IAAI,CAAC;QACX,OAAO,oQAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IACrD;IACA,4PAAA,CAAA,OAAI,CAAC,GAAG,CAAC,kBAAkB,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;QACnD,MAAM,cAAe,MAAM,QAAQ,IAAI;QAKvC,QAAQ,MAAM,GAAG,CAAC,CAAC,OACjB,KAAK,EAAE,KAAK,OAAO,EAAE,GAAG;gBAAE,GAAG,IAAI;gBAAE,GAAG,WAAW;YAAC,IAAI;QAExD,OAAO,oQAAA,CAAA,eAAY,CAAC,IAAI,CAAC,aAAa;YAAE,QAAQ;QAAI;IACtD;IACA,4PAAA,CAAA,OAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,MAAM,EAAE;QACvC,QAAQ,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,OAAO,EAAE;QACpD,OAAO,IAAI,oQAAA,CAAA,eAAY,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC9C;CACD"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/backend/src/mocks/browser.ts"],"sourcesContent":["import { setupServer } from \"msw/node\";\nimport { handlers } from \"./handlers\";\n\nexport const worker = setupServer(...handlers);\n"],"names":[],"mappings":";;;;;;;;AACA;;;AAEO,MAAM,SAAS,eAAe,8IAAA,CAAA,WAAQ"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/msw.ts"],"sourcesContent":["import { worker } from \"../../backend/src/mocks/browser\";\n\nif (process.env.NODE_ENV === \"development\") {\n  worker.start({\n    onUnhandledRequest: \"warn\" // Opcional: muestra advertencias para solicitudes no manejadas\n  });\n}\n"],"names":[],"mappings":";AAAA;AAEI;;AAAJ,wCAA4C;IAC1C,6IAAA,CAAA,SAAM,CAAC,KAAK,CAAC;QACX,oBAAoB,OAAO,+DAA+D;IAC5F;AACF"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}