{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/services/taskService.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nexport const taskService = {\n  getTasks: async () => {\n    const response = await axios.get(`${API_URL}/tasks`);\n    return response.data;\n  },\n\n  createTask: async (task: {\n    title: string;\n    description: string;\n    status: string;\n  }) => {\n    const response = await axios.post(`${API_URL}/tasks`, task);\n    return response.data;\n  },\n\n  updateTask: async (\n    id: number,\n    updates: Partial<{\n      title: string;\n      description: string;\n      status: string;\n    }>\n  ) => {\n    const response = await axios.put(`${API_URL}/tasks`, { id, ...updates });\n    return response.data;\n  },\n\n  deleteTask: async (id: number) => {\n    const response = await axios.delete(`${API_URL}/tasks`, {\n      params: { taskId: id }\n    });\n    return response.data;\n  }\n};\n"],"names":[],"mappings":";;;AAEgB;AAFhB;;AAEA,MAAM;AAEC,MAAM,cAAc;IACzB,UAAU;QACR,MAAM,WAAW,MAAM,0LAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,MAAM,CAAC;QACnD,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO;QAKjB,MAAM,WAAW,MAAM,0LAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;QACtD,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OACV,IACA;QAMA,MAAM,WAAW,MAAM,0LAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;YAAE;YAAI,GAAG,OAAO;QAAC;QACtE,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO;QACjB,MAAM,WAAW,MAAM,0LAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,MAAM,CAAC,EAAE;YACtD,QAAQ;gBAAE,QAAQ;YAAG;QACvB;QACA,OAAO,SAAS,IAAI;IACtB;AACF"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { taskService } from \"../services/taskService\";\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n}\n\nexport default function TasksPage() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await taskService.getTasks();\n        console.log(data);\n        setTasks(data);\n      } catch (err: any) {\n        setError(err.message || \"Error fetching tasks\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  if (loading) {\n    return <p>Loading tasks...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n\n  return (\n    <div>\n      <h1>Tasks</h1>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <h2>{task.title}</h2>\n            <p>{task.description}</p>\n            <p>Status: {task.status}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;kDAAa;oBACjB,IAAI;wBACF,MAAM,OAAO,MAAM,gJAAA,CAAA,cAAW,CAAC,QAAQ;wBACvC,QAAQ,GAAG,CAAC;wBACZ,SAAS;oBACX,EAAE,OAAO,KAAU;wBACjB,SAAS,IAAI,OAAO,IAAI;oBAC1B,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;8BAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBAAO,4TAAC;sBAAE;;;;;;IACZ;IAEA,IAAI,OAAO;QACT,qBAAO,4TAAC;;gBAAE;gBAAQ;;;;;;;IACpB;IAEA,qBACE,4TAAC;;0BACC,4TAAC;0BAAG;;;;;;0BACJ,4TAAC;0BACE,MAAM,GAAG,CAAC,CAAC,qBACV,4TAAC;;0CACC,4TAAC;0CAAI,KAAK,KAAK;;;;;;0CACf,4TAAC;0CAAG,KAAK,WAAW;;;;;;0CACpB,4TAAC;;oCAAE;oCAAS,KAAK,MAAM;;;;;;;;uBAHhB,KAAK,EAAE;;;;;;;;;;;;;;;;AAS1B;GA3CwB;KAAA"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}