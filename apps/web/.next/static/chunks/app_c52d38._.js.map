{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/state/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  token: string | null;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  token: null,\n  error: null\n};\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (\n    credentials: { username: string; password: string },\n    { rejectWithValue }\n  ) => {\n    const { username, password } = credentials;\n    const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/login`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username, password })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return rejectWithValue(errorData.error || \"Login failed\");\n    }\n\n    const data = await response.json();\n\n    document.cookie = `token=${data.token}; path=/`;\n\n    return { token: data.token };\n  }\n);\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.error = null;\n      document.cookie = \"token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(\n        login.fulfilled,\n        (state, action: PayloadAction<{ token: string }>) => {\n          state.isAuthenticated = true;\n          state.token = action.payload.token;\n          state.error = null;\n        }\n      )\n      .addCase(login.rejected, (state, action) => {\n        state.error = action.payload as string;\n      });\n  }\n});\n\nexport const { logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"names":[],"mappings":";;;;;;AAAA;AAqBoC;;AAbpC,MAAM,eAA0B;IAC9B,iBAAiB;IACjB,OAAO;IACP,OAAO;AACT;AAEO,MAAM,QAAQ,CAAA,GAAA,qYAAA,CAAA,mBAAgB,AAAD,EAClC,cACA,OACE,aACA,EAAE,eAAe,EAAE;IAEnB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;IAC/B,MAAM,WAAW,MAAM,MAAM,iEAAmC,MAAM,CAAC,EAAE;QACvE,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;QAAS;IAC5C;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI;QACrC,OAAO,gBAAgB,UAAU,KAAK,IAAI;IAC5C;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,SAAS,MAAM,GAAG,CAAC,MAAM,EAAE,KAAK,KAAK,CAAC,QAAQ,CAAC;IAE/C,OAAO;QAAE,OAAO,KAAK,KAAK;IAAC;AAC7B;AAGK,MAAM,YAAY,CAAA,GAAA,qYAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN;IACA,UAAU;QACR,QAAO,KAAK;YACV,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG;YACd,MAAM,KAAK,GAAG;YACd,SAAS,MAAM,GAAG;QACpB;IACF;IACA,eAAe,CAAC;QACd,QACG,OAAO,CACN,MAAM,SAAS,EACf,CAAC,OAAO;YACN,MAAM,eAAe,GAAG;YACxB,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,KAAK,GAAG;QAChB,GAED,OAAO,CAAC,MAAM,QAAQ,EAAE,CAAC,OAAO;YAC/B,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IACJ;AACF;AAEO,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,OAAO;uCAE5B,UAAU,OAAO"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/state/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer\n  }\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,QAAQ,CAAA,GAAA,qYAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,2IAAA,CAAA,UAAW;IACnB;AACF"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/layout.tsx"],"sourcesContent":["\"use client\";\n\nimport { Provider } from \"react-redux\";\nimport \"./globals.css\";\nimport { store } from \"./state/store\";\n\nexport default function RootLayout({\n  children\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Provider store={store}>{children}</Provider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAFA;AAFA;;;;;AAMe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,4TAAC;QAAK,MAAK;kBACT,cAAA,4TAAC;sBACC,cAAA,4TAAC,qSAAA,CAAA,WAAQ;gBAAC,OAAO,uIAAA,CAAA,QAAK;0BAAG;;;;;;;;;;;;;;;;AAIjC;KAZwB"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}