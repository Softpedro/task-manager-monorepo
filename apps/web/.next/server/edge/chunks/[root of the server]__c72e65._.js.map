{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/web/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nexport function middleware(req: NextRequest) {\n  const token = req.cookies.get(\"token\"); // Leer el token desde las cookies\n\n  // Si no hay token y no estamos en la página de login, redirigir al login\n  if (!token && req.nextUrl.pathname !== \"/login\") {\n    return NextResponse.redirect(new URL(\"/login\", req.url));\n  }\n\n  // Si el usuario intenta acceder a la página de login estando autenticado, redirigir\n  if (token && req.nextUrl.pathname === \"/login\") {\n    return NextResponse.redirect(new URL(\"/tasks\", req.url));\n  }\n\n  return NextResponse.next();\n}\n\n// Configurar el middleware para que se aplique a rutas específicas\nexport const config = {\n  matcher: [\"/tasks/:path*\", \"/login\"] // Proteger /tasks y redirigir en /login\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,GAAgB;IACzC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,kCAAkC;IAE1E,yEAAyE;IACzE,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;QAC/C,OAAO,oTAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,oFAAoF;IACpF,IAAI,SAAS,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;QAC9C,OAAO,oTAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,OAAO,oTAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAiB;KAAS,CAAC,wCAAwC;AAC/E"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}