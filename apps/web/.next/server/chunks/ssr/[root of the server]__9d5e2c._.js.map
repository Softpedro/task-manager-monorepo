{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskForm/TaskForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./taskForm.css\";\n\nexport interface TaskFormProps {\n  initialValues?: {\n    title: string;\n    description: string;\n    status: \"todo\" | \"in-progress\" | \"completed\";\n  };\n  onSubmit: (values: {\n    title: string;\n    description: string;\n    status: \"todo\" | \"in-progress\" | \"completed\";\n  }) => void;\n}\n\nexport function TaskForm({ initialValues, onSubmit }: TaskFormProps) {\n  const [title, setTitle] = useState(initialValues?.title || \"\");\n  const [description, setDescription] = useState(\n    initialValues?.description || \"\"\n  );\n  const [status, setStatus] = useState(initialValues?.status || \"todo\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit({ title, description, status });\n  };\n\n  return (\n    <div style={{ margin: \"3em\" }} className=\"task-form\">\n      <form\n        onSubmit={handleSubmit}\n        style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <select\n          value={status}\n          onChange={(e) =>\n            setStatus(e.target.value as \"todo\" | \"in-progress\" | \"completed\")\n          }\n        >\n          <option value=\"todo\">To Do</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;AAgBO,SAAS,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAiB;IACjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,eAAe,SAAS;IAC3D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAC3C,eAAe,eAAe;IAEhC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,eAAe,UAAU;IAE9D,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS;YAAE;YAAO;YAAa;QAAO;IACxC;IAEA,qBACE,6WAAC;QAAI,OAAO;YAAE,QAAQ;QAAM;QAAG,WAAU;kBACvC,cAAA,6WAAC;YACC,UAAU;YACV,OAAO;gBAAE,SAAS;gBAAQ,eAAe;gBAAU,KAAK;YAAO;;8BAE/D,6WAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;8BAE1C,6WAAC;oBACC,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;8BAEhD,6WAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IACT,UAAU,EAAE,MAAM,CAAC,KAAK;;sCAG1B,6WAAC;4BAAO,OAAM;sCAAO;;;;;;sCACrB,6WAAC;4BAAO,OAAM;sCAAc;;;;;;sCAC5B,6WAAC;4BAAO,OAAM;sCAAY;;;;;;;;;;;;8BAE5B,6WAAC;oBAAO,MAAK;8BAAS;;;;;;;;;;;;;;;;;AAI9B"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskItem/TaskItem.tsx"],"sourcesContent":["import \"./taskItem.css\";\n\nexport interface TaskItemProps {\n  id: number;\n  title: string;\n  description: string;\n  status: \"todo\" | \"in-progress\" | \"completed\";\n  onEdit?: (id: number) => void;\n  onDelete?: (id: number) => void;\n}\n\nexport function TaskItem({\n  id,\n  title,\n  description,\n  status,\n  onEdit,\n  onDelete\n}: TaskItemProps) {\n  return (\n    <div className=\"task-item\">\n      <div>\n        <h3>{title}</h3>\n        <p>{description}</p>\n        <p>Status: {status}</p>\n      </div>\n      <div>\n        <button onClick={() => onEdit?.(id)} style={{ marginRight: \"10px\" }}>\n          Edit\n        </button>\n        <button\n          onClick={() => onDelete?.(id)}\n          style={{ color: \"white\", backgroundColor: \"red\" }}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAWO,SAAS,SAAS,EACvB,EAAE,EACF,KAAK,EACL,WAAW,EACX,MAAM,EACN,MAAM,EACN,QAAQ,EACM;IACd,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;;kCACC,6WAAC;kCAAI;;;;;;kCACL,6WAAC;kCAAG;;;;;;kCACJ,6WAAC;;4BAAE;4BAAS;;;;;;;;;;;;;0BAEd,6WAAC;;kCACC,6WAAC;wBAAO,SAAS,IAAM,SAAS;wBAAK,OAAO;4BAAE,aAAa;wBAAO;kCAAG;;;;;;kCAGrE,6WAAC;wBACC,SAAS,IAAM,WAAW;wBAC1B,OAAO;4BAAE,OAAO;4BAAS,iBAAiB;wBAAM;kCACjD;;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/packages/ui/src/stories/TaskList/TaskList.tsx"],"sourcesContent":["import { TaskItem, TaskItemProps } from \"../TaskItem/TaskItem\";\n\nexport interface TaskListProps {\n  tasks: TaskItemProps[];\n  onEdit: (id: number) => void;\n  onDelete: (id: number) => void;\n}\n\nexport function TaskList({ tasks, onEdit, onDelete }: TaskListProps) {\n  return (\n    <div style={{ margin: \"3em\" }} className=\"task-list\">\n      {tasks.map((task) => (\n        <TaskItem key={task.id} {...task} onEdit={onEdit} onDelete={onDelete} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAQO,SAAS,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAiB;IACjE,qBACE,6WAAC;QAAI,OAAO;YAAE,QAAQ;QAAM;QAAG,WAAU;kBACtC,MAAM,GAAG,CAAC,CAAC,qBACV,6WAAC,yJAAA,CAAA,WAAQ;gBAAgB,GAAG,IAAI;gBAAE,QAAQ;gBAAQ,UAAU;eAA7C,KAAK,EAAE;;;;;;;;;;AAI9B"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/services/taskService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { Task } from \"../state/taskStore\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\nconsole.log(API_URL);\n\nexport const taskService = {\n  getTasks: async (): Promise<Task[]> => {\n    const response = await axios.get(`${API_URL}/tasks`);\n    return response.data;\n  },\n  createTask: async (task: Omit<Task, \"id\">): Promise<Task> => {\n    try {\n      const response = await axios.post(\n        `${API_URL}/tasks`,\n        {\n          title: task.title,\n          description: task.description,\n          status: task.status\n        },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n      throw error;\n    }\n  },\n  updateTask: async (id: number, updates: Partial<Task>): Promise<Task> => {\n    try {\n      const response = await axios.put(`${API_URL}/tasks/${id}`, updates, {\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating task with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  deleteTask: async (id: number): Promise<void> => {\n    try {\n      const response = await axios.delete(`${API_URL}/tasks/${id}`, {\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n      console.log(\"Task deleted successfully:\", response.data);\n    } catch (error) {\n      console.error(`Error deleting task with ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM;AACN,QAAQ,GAAG,CAAC;AAEL,MAAM,cAAc;IACzB,UAAU;QACR,MAAM,WAAW,MAAM,uLAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,MAAM,CAAC;QACnD,OAAO,SAAS,IAAI;IACtB;IACA,YAAY,OAAO;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,uLAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,QAAQ,MAAM,CAAC,EAClB;gBACE,OAAO,KAAK,KAAK;gBACjB,aAAa,KAAK,WAAW;gBAC7B,QAAQ,KAAK,MAAM;YACrB,GACA;gBAAE,SAAS;oBAAE,gBAAgB;gBAAmB;YAAE;YAEpD,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IACA,YAAY,OAAO,IAAY;QAC7B,IAAI;YACF,MAAM,WAAW,MAAM,uLAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE,SAAS;gBAClE,SAAS;oBAAE,gBAAgB;gBAAmB;YAChD;YACA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC,EAAE;YACpD,MAAM;QACR;IACF;IACA,YAAY,OAAO;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,uLAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;gBAC5D,SAAS;oBAAE,gBAAgB;gBAAmB;YAChD;YACA,QAAQ,GAAG,CAAC,8BAA8B,SAAS,IAAI;QACzD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC,EAAE;YACpD,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/state/taskStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\nexport interface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: \"todo\" | \"in-progress\" | \"completed\";\n}\n\ninterface TaskState {\n  tasks: Task[];\n  fetchTasks: () => Promise<void>;\n  addTask: (task: Task) => void;\n  updateTask: (id: number, updates: Partial<Task>) => void;\n  deleteTask: (id: number) => void;\n}\n\n// Asegúrate de que la variable está definida\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\nif (!API_URL) {\n  throw new Error(\"API_URL is not defined in the environment variables\");\n}\n\nexport const useTaskStore = create<TaskState>((set) => ({\n  tasks: [],\n  fetchTasks: async () => {\n    const response = await fetch(`${API_URL}/tasks`);\n    const data: Task[] = await response.json();\n    set({ tasks: data });\n  },\n  addTask: (task) => set((state) => ({ tasks: [...state.tasks, task] })),\n  updateTask: (id, updates) =>\n    set((state) => ({\n      tasks: state.tasks.map((task) =>\n        task.id === id ? { ...task, ...updates } : task\n      )\n    })),\n  deleteTask: (id) =>\n    set((state) => ({ tasks: state.tasks.filter((task) => task.id !== id) }))\n}));\n"],"names":[],"mappings":";;;AAAA;;AAiBA,6CAA6C;AAC7C,MAAM;AACN,uCAAc;;AAEd;AAEO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,SAAM,AAAD,EAAa,CAAC,MAAQ,CAAC;QACtD,OAAO,EAAE;QACT,YAAY;YACV,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC;YAC/C,MAAM,OAAe,MAAM,SAAS,IAAI;YACxC,IAAI;gBAAE,OAAO;YAAK;QACpB;QACA,SAAS,CAAC,OAAS,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAK;gBAAC,CAAC;QACpE,YAAY,CAAC,IAAI,UACf,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,OACtB,KAAK,EAAE,KAAK,KAAK;4BAAE,GAAG,IAAI;4BAAE,GAAG,OAAO;wBAAC,IAAI;gBAE/C,CAAC;QACH,YAAY,CAAC,KACX,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;gBAAI,CAAC;IAC3E,CAAC"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///Users/pedromollehuancatorres/Documents/teach/pruebas/monorepo-demo/apps/web/apps/web/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { TaskList } from \"ui\";\nimport { TaskForm } from \"ui\";\nimport { taskService } from \"../services/taskService\";\nimport { useTaskStore } from \"../state/taskStore\";\nimport { Task } from \"../state/taskStore\";\n\nexport default function TasksPage() {\n  const { tasks, fetchTasks, addTask, updateTask, deleteTask } = useTaskStore();\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const handleAddTask = async (values: Omit<Task, \"id\">) => {\n    const newTask = await taskService.createTask(values);\n    addTask(newTask);\n  };\n\n  const handleUpdateTask = async (id: number, updates: Partial<Task>) => {\n    await taskService.updateTask(id, updates);\n    updateTask(id, updates);\n  };\n\n  const handleDeleteTask = async (id: number) => {\n    await taskService.deleteTask(id);\n    deleteTask(id);\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Task Manager</h1>\n      <TaskForm onSubmit={handleAddTask} />\n      <TaskList\n        tasks={tasks}\n        onEdit={(id) => {\n          const task = tasks.find((task) => task.id === id);\n          if (task) {\n            handleUpdateTask(id, { ...task, status: \"completed\" });\n          }\n        }}\n        onDelete={handleDeleteTask}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AAFA;AADA;AAHA;;;;;;;AASe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,eAAY,AAAD;IAE1E,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,gBAAgB,OAAO;QAC3B,MAAM,UAAU,MAAM,6IAAA,CAAA,cAAW,CAAC,UAAU,CAAC;QAC7C,QAAQ;IACV;IAEA,MAAM,mBAAmB,OAAO,IAAY;QAC1C,MAAM,6IAAA,CAAA,cAAW,CAAC,UAAU,CAAC,IAAI;QACjC,WAAW,IAAI;IACjB;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,6IAAA,CAAA,cAAW,CAAC,UAAU,CAAC;QAC7B,WAAW;IACb;IAEA,qBACE,6WAAC;QAAI,OAAO;YAAE,SAAS;QAAO;;0BAC5B,6WAAC;0BAAG;;;;;;0BACJ,6WAAC,yJAAA,CAAA,WAAQ;gBAAC,UAAU;;;;;;0BACpB,6WAAC,yJAAA,CAAA,WAAQ;gBACP,OAAO;gBACP,QAAQ,CAAC;oBACP,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;oBAC9C,IAAI,MAAM;wBACR,iBAAiB,IAAI;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAY;oBACtD;gBACF;gBACA,UAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}